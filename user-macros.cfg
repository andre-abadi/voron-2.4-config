#####################################################################
#   Custom Macros
#####################################################################

[gcode_macro FRAME_LEDS_ON]
gcode:
    SET_PIN PIN=caselight VALUE=1.00

[gcode_macro FRAME_LEDS_OFF]
gcode:
    SET_PIN PIN=caselight VALUE=0.00

[gcode_macro STARTUP_SELF_TEST]
gcode:
    SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.25 BLUE=0
    FRAME_LEDS_ON                   ; turn on frame lights
    # Homing
    STATUS_HOMING                   ; SB LED
    G28                             ; xyz homing
    # Quad Gantry Level
    STATUS_LEVELING                 ; SB LED
    QUAD_GANTRY_LEVEL               ; quad gantry level
    # Moving to Front
    STATUS_HOMING                   ; SB LED
    G28                             ; xyz homing, again now that gantry is level
    # Moving to Front
    STATUS_BUSY                     ; SB LED
    G0 X150 Y0 Z100 F3600           ; move nozzle front and centre
    STATUS_READY                    ; SB LED
    SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.5 BLUE=0.5

[gcode_macro POWER_DOWN_STANDBY]
gcode:
    TURN_OFF_HEATERS
    M84                             ; power down all steppers
    STATUS_OFF                      ; turn off all toolhead LEDs
    FRAME_LEDS_OFF                  ; turn off frame LEDs
    SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0

[gcode_macro SAVE_LCD_Z_OFFSET]
gcode:
    Z_OFFSET_APPLY_ENDSTOP
    SAVE_CONFIG

[gcode_macro FRONT_AND_CENTRE]
gcode:
    # Moving to Front
    STATUS_BUSY                     ; SB LED
    G0 X150 Y0 Z100 F3600           ; move nozzle front and centre
    STATUS_READY

#####################################################################
#   Ellis Macros
#####################################################################
# https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/articles/useful_macros.md

# Replace standard M109 with TEMPERATURE_WAIT, to stop klipper hanging until temp balance reached
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

# Home if not already homed.
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

# QGL if not already done.
[gcode_macro CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}

# This just provides an easy shortcut to change your neopixel LCD color.
# Example usage: LCDRGB R=0.8 G=0 B=0
[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=3

# To reset the RGB / set the initial RGB.
# (set your default LCD colors here, and use RESETRGB to call set it back.)
[gcode_macro RESETRGB]
gcode:
    SET_LED LED=lcd RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
    SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
    SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[gcode_macro SHUTDOWN_HOST]
gcode:
    #LCDRGB R=0 G=0 B=0                               ; Turn off LCD neopixels (see above for this macro)
    #OFF                                              ; Shortcut to turn everything off (see above for this macro)
    #{action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

[menu __main __setup __shutdown]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shut Down Host
gcode: SHUTDOWN_HOST

#Usage:
# BEEP: Beep once with defaults.
# BEEP I=3: Beep 3 times with defaults.
# BEEP I=3 DUR=100: Beep 3 times, for 100ms each.
[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=1
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
		G4 P{dur}
    {% endfor %}


# https://github.com/JoeCat1207/V0.1-Purge-line-SuperSlicer/blob/main/Purgeline.txt
[gcode_macro PURGE_LINE]
gcode:
    STATUS_CLEANING                 ; SB LED
    G0 Y0 X40                      ; go to tongue of print bed
    G1 Z0.2 F500.0                 ; move bed to nozzle
    G92 E0.0                       ; reset extruder
    G1 E5.0 F500                   ; pre-purge prime LENGTH SHOULD MATCH YOUR PRINT_END RETRACT
    G1 X150 E25.0 F500.0             ; intro line 1, default X80 E8.0
    #G1 Y0.3                        ; move in a little
    #G1 X100 E20.0 F500.0             ; second line
    G92 E0.0                       ; reset extruder, default E0.0
    G1 E-0.1 F1800                 ; retract filament
    G1 Z5.0                        ; move nozzle to prevent scratch, default Z2.0
    STATUS_READY

